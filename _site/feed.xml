<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="3.8.3">Jekyll</generator><link href="http://localhost:4000/feed.xml" rel="self" type="application/atom+xml" /><link href="http://localhost:4000/" rel="alternate" type="text/html" /><updated>2019-06-05T18:40:47+05:30</updated><id>http://localhost:4000/</id><title type="html">Yash Jain</title><subtitle>My personal blog</subtitle><author><name>Yash Jain</name></author><entry><title type="html">HPCC Systems Internship : Fourth Week Updates!!</title><link href="http://localhost:4000/2019/05/31/hpcc-fourth-week.html" rel="alternate" type="text/html" title="HPCC Systems Internship : Fourth Week Updates!!" /><published>2019-05-31T00:00:00+05:30</published><updated>2019-05-31T00:00:00+05:30</updated><id>http://localhost:4000/2019/05/31/hpcc-fourth-week</id><content type="html" xml:base="http://localhost:4000/2019/05/31/hpcc-fourth-week.html">Hi there,

As i had mentioned before, I worked on the design part ths week. The clustered HPCC Systems platform has multiple components such as Thor for distributed storage, Roxie for online data processing, Sasha for backups, Dali for File Server and Authorization. These components need to interact with each other for the platform to function as expected. This is what adds to the complexity.

For designing we started with a plan to go and create separate charm for each component. But getting this done during a 12 week inteernship seemed difficult. So we moved to a different plan of creating a admin node which goes and sets up other nodes. But this also became quite complex and unnecessarily added a single point of failure. So we have now decided to create only two charms one for dali and one for other nodes. This seems like a resonable target to achieve during the course of the internship. 

As for storage, I did experiment with AWS EBS for AWS Cloud and lvm for localhost. But incorporating these seems difficult to achieve in 12 weeks so unfortunately, we won't be supporting persistent storage in the final charm.

I would be working on the dali charm for the next 2 weeks. Will be writing another post on that soon. Thanks for reading.

Yash Jain</content><author><name>Yash Jain</name></author><category term="internship" /><category term="hpcc" /><summary type="html">Hi there, As i had mentioned before, I worked on the design part ths week. The clustered HPCC Systems platform has multiple components such as Thor for distributed storage, Roxie for online data processing, Sasha for backups, Dali for File Server and Authorization. These components need to interact with each other for the platform to function as expected. This is what adds to the complexity. For designing we started with a plan to go and create separate charm for each component. But getting this done during a 12 week inteernship seemed difficult. So we moved to a different plan of creating a admin node which goes and sets up other nodes. But this also became quite complex and unnecessarily added a single point of failure. So we have now decided to create only two charms one for dali and one for other nodes. This seems like a resonable target to achieve during the course of the internship. As for storage, I did experiment with AWS EBS for AWS Cloud and lvm for localhost. But incorporating these seems difficult to achieve in 12 weeks so unfortunately, we won’t be supporting persistent storage in the final charm. I would be working on the dali charm for the next 2 weeks. Will be writing another post on that soon. Thanks for reading. Yash Jain</summary></entry><entry><title type="html">HPCC Systems Internship : Third Week Updates!!</title><link href="http://localhost:4000/2019/05/24/hpcc-third-week.html" rel="alternate" type="text/html" title="HPCC Systems Internship : Third Week Updates!!" /><published>2019-05-24T00:00:00+05:30</published><updated>2019-05-24T00:00:00+05:30</updated><id>http://localhost:4000/2019/05/24/hpcc-third-week</id><content type="html" xml:base="http://localhost:4000/2019/05/24/hpcc-third-week.html">&lt;p&gt;Hi there,&lt;/p&gt;

&lt;p&gt;This is a fun week. I wrote finally started writing code. I could get the tests to work correctly. The charm test can now check if the HPCC Systems standalone charm works fine. Writing the tests was a bit difficult for me as Juju does not really provide an efficient debugging method. However, I finally, could get the tests to run.&lt;/p&gt;

&lt;p&gt;For those who may need help debugging their charms, here are a few commands which might help you debug the charm. The commands assume you are hacking on the HPCC charm but you may use them for other by making appropriate changes.&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;To see changes to the controller in real time, use&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;watch -c juju status --color&lt;/code&gt;&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;To debug the hooks, you can use,&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;juju debug-hook hpcc-platform/&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;juju debug-hook hpcc-platform/ &amp;lt;hook name&amp;gt;&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;This would only open a session for the specified hook. If the hook name is not 
specified, all hooks are debugged. Once, debugging is done, you must exit the 
corresponding terminal pane for juju to continue executing.&lt;/p&gt;

&lt;p&gt;Juju would retry running a hook automatically for a fixed number of times. If you need the hook to run manually, you can use&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;juju resolved hpcc-platform/1&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;However, his only works if the hook failed in execution.&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;To build, you can use the build.sh file provided.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;To run the tests, goto the built charms location (by default, build/builds/hpcc-platform) and run the test using&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;python3 tests/10-deploy&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;You may need to adjust the timeouts in the tests if necessary.&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;To test the stop hook, simply run&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;juju remove-application hpcc-platform&lt;/code&gt;&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;To see the logs from your instance, use&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;juju debug-log --include hpcc-platform --level DEBUG --replay&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;All things said, the charm can now successfully start, stop and respond to config changes.
I will be spending the next two weeks to get the design of the clustered charm ready. More on that in the coming weeks.&lt;/p&gt;

&lt;p&gt;Yash Jain&lt;/p&gt;</content><author><name>Yash Jain</name></author><category term="internship" /><category term="hpcc" /><summary type="html">Hi there, This is a fun week. I wrote finally started writing code. I could get the tests to work correctly. The charm test can now check if the HPCC Systems standalone charm works fine. Writing the tests was a bit difficult for me as Juju does not really provide an efficient debugging method. However, I finally, could get the tests to run. For those who may need help debugging their charms, here are a few commands which might help you debug the charm. The commands assume you are hacking on the HPCC charm but you may use them for other by making appropriate changes. To see changes to the controller in real time, use watch -c juju status --color To debug the hooks, you can use, juju debug-hook hpcc-platform/ juju debug-hook hpcc-platform/ &amp;lt;hook name&amp;gt; This would only open a session for the specified hook. If the hook name is not specified, all hooks are debugged. Once, debugging is done, you must exit the corresponding terminal pane for juju to continue executing. Juju would retry running a hook automatically for a fixed number of times. If you need the hook to run manually, you can use juju resolved hpcc-platform/1 However, his only works if the hook failed in execution. To build, you can use the build.sh file provided. To run the tests, goto the built charms location (by default, build/builds/hpcc-platform) and run the test using python3 tests/10-deploy You may need to adjust the timeouts in the tests if necessary. To test the stop hook, simply run juju remove-application hpcc-platform To see the logs from your instance, use juju debug-log --include hpcc-platform --level DEBUG --replay All things said, the charm can now successfully start, stop and respond to config changes. I will be spending the next two weeks to get the design of the clustered charm ready. More on that in the coming weeks. Yash Jain</summary></entry><entry><title type="html">HPCC Systems Internship : Second Week Updates!!</title><link href="http://localhost:4000/2019/05/17/hpcc-second-week.html" rel="alternate" type="text/html" title="HPCC Systems Internship : Second Week Updates!!" /><published>2019-05-17T00:00:00+05:30</published><updated>2019-05-17T00:00:00+05:30</updated><id>http://localhost:4000/2019/05/17/hpcc-second-week</id><content type="html" xml:base="http://localhost:4000/2019/05/17/hpcc-second-week.html">Hi there,

This week most of my time was spent in reading the documentation and spending time exploring juju and the charm helpers framework.I also created a simple demo charm. I don't plan on pushing it to github as it doesn't really do much.

Ming and I during our weekly meeting have discussed the steps to be taken for the coming weeks. He has suggested I spend time on the hppc-charm repo. Hopefully, by the end of week 3, I should have upstreamed 1-2 PR’s. I plan on writing some tests for the existing charms this week. I will also work adding support for some of the items in config.yaml. ( I haven’t decided which ones but something like checksum support would be nice.)

I am keeping it short this week. Thanks for reading this.

Yash Jain</content><author><name>Yash Jain</name></author><category term="internship" /><category term="hpcc" /><summary type="html">Hi there, This week most of my time was spent in reading the documentation and spending time exploring juju and the charm helpers framework.I also created a simple demo charm. I don’t plan on pushing it to github as it doesn’t really do much. Ming and I during our weekly meeting have discussed the steps to be taken for the coming weeks. He has suggested I spend time on the hppc-charm repo. Hopefully, by the end of week 3, I should have upstreamed 1-2 PR’s. I plan on writing some tests for the existing charms this week. I will also work adding support for some of the items in config.yaml. ( I haven’t decided which ones but something like checksum support would be nice.) I am keeping it short this week. Thanks for reading this. Yash Jain</summary></entry><entry><title type="html">HPCC Internship : First Week Over!!</title><link href="http://localhost:4000/2019/05/10/hpcc-internship-first-week.html" rel="alternate" type="text/html" title="HPCC Internship : First Week Over!!" /><published>2019-05-10T00:00:00+05:30</published><updated>2019-05-10T00:00:00+05:30</updated><id>http://localhost:4000/2019/05/10/hpcc-internship-first-week</id><content type="html" xml:base="http://localhost:4000/2019/05/10/hpcc-internship-first-week.html">Hi there.

I just finished the first week of my internship at [HPCC Systems](https://hpccsystems.com/). Those who don't know about the company, here's a brief intro from their [about page](https://hpccsystems.com/about#Platform)
&gt; The HPCC Systems platform is a set of easy-to-use software features, enabling developers and data scientists to process and analyze data at any scale.

I am working on making the deployment easier. I will be using Juju cluster deployment framework to achieve this. I am being mentored by [Xiaoming Wang](https://www.linkedin.com/in/xiaoming-wang-749aaa99) and [Kevin Wang](https://www.linkedin.com/in/kevin-wang-16550a5).

The internship has got off to a great start. I have been going through the docs and understanding the HPCC Systems platform in general. The platform is quite complex, with a lot of moving parts interacting amongst themselves, so I need to understand this before I really begin working. I will be writing more on this in the coming weeks.

But for today, the internship is really coming on well. LexisNexis Risk Solutions is an excellent employer and most importantly I would like to give a shout out to Xiaoming and Kevin for being wonderful mentors. I although am new here and don't know much but these guys have been at the forefront to help me out whenever I need. So yes, thanks a lot Ming and Kevin. Looking forward to working with you.

That's it for today. Thanks for reading this.
Yash</content><author><name>Yash Jain</name></author><category term="internship" /><category term="hpcc" /><summary type="html">Hi there. I just finished the first week of my internship at HPCC Systems. Those who don’t know about the company, here’s a brief intro from their about page The HPCC Systems platform is a set of easy-to-use software features, enabling developers and data scientists to process and analyze data at any scale. I am working on making the deployment easier. I will be using Juju cluster deployment framework to achieve this. I am being mentored by Xiaoming Wang and Kevin Wang. The internship has got off to a great start. I have been going through the docs and understanding the HPCC Systems platform in general. The platform is quite complex, with a lot of moving parts interacting amongst themselves, so I need to understand this before I really begin working. I will be writing more on this in the coming weeks. But for today, the internship is really coming on well. LexisNexis Risk Solutions is an excellent employer and most importantly I would like to give a shout out to Xiaoming and Kevin for being wonderful mentors. I although am new here and don’t know much but these guys have been at the forefront to help me out whenever I need. So yes, thanks a lot Ming and Kevin. Looking forward to working with you. That’s it for today. Thanks for reading this. Yash</summary></entry><entry><title type="html">First Blog!!</title><link href="http://localhost:4000/2017/02/20/hello-hydeout.html" rel="alternate" type="text/html" title="First Blog!!" /><published>2017-02-20T00:00:00+05:30</published><updated>2017-02-20T00:00:00+05:30</updated><id>http://localhost:4000/2017/02/20/hello-hydeout</id><content type="html" xml:base="http://localhost:4000/2017/02/20/hello-hydeout.html">Finally my first blog post!! Thanks to Andrew Fong for this awesone hydeout theme.</content><author><name>Yash Jain</name></author><summary type="html">Finally my first blog post!! Thanks to Andrew Fong for this awesone hydeout theme.</summary></entry></feed>